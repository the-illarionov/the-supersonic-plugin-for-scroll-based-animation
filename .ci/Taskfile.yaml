version: '3'

dotenv: [.env]

tasks:
  env:
    desc: makes .env from .env.example
    cmds:
      - cp .env.example .env

  root:yarn:
    desc: runs 'yarn' in root directory
    cmds:
      - |
        docker run --rm \
          -w /app \
          -v $(pwd)/..:/app \
          $NODE_IMAGE yarn

  docs:yarn:
    desc: runs 'yarn' in 'docs' directory
    cmds:
      - |
        docker run --rm \
          -w /app \
          -v $(pwd)/../docs:/app \
          $NODE_IMAGE yarn

  lib:yarn:
    desc: runs 'yarn' in 'lib' directory
    cmds:
      - |
        docker run --rm \
          -w /app \
          -v $(pwd)/../lib:/app \
          $NODE_IMAGE yarn

  yarn:
    cmds:
      - task root:yarn
      - task docs:yarn
      - task lib:yarn

  lint:
    cmds:
      - |
        docker run --rm \
          -w /app \
          -v $(pwd)/..:/app \
          $NODE_IMAGE /bin/bash -c "yarn lint"

  build:
    desc: creates production build of docs
    cmds:
      - task lint
      - |
        docker run --rm \
          -w /app/docs \
          -v $(pwd)/../docs:/app/docs \
          -v $(pwd)/../lib:/app/lib \
          $NODE_IMAGE /bin/bash -c "yarn build"

  up:
    cmds:
      - |
        docker run \
          --rm --network="host" \
          -v $(pwd)/../docs:/app/docs \
          -v $(pwd)/../lib:/app/lib \
          -w /app/docs \
          --name ci-preview \
          -d $NODE_IMAGE \
          yarn preview

  down:
    cmds:
      - docker container stop ci-preview

  test:unit:
    desc: runs unit tests in 'lib' directory
    cmds:
      - |
        docker run --rm \
          -v $(pwd)/../lib:/app \
          -w /app \
          $NODE_IMAGE \
          yarn test:unit

  test:e2e:
    desc: runs Playwright
    cmds:
      - |
        docker run --rm \
          --network="host" \
          -v $(pwd)/../docs:/app \
          -w /app \
          $PLAYWRIGHT_IMAGE \
          yarn test:e2e

  test:
    cmds:
      - task test:unit
      - task test:e2e

  deploy:pages:
    desc: deploy to CloudFlare pages
    cmds:
      - |
        docker run \
        --rm \
        -w /app \
        -v $(pwd)/../docs:/app \
        -e CLOUDFLARE_ACCOUNT_ID \
        -e CLOUDFLARE_API_TOKEN \
        $NODE_IMAGE yarn deploy

  deploy:
    desc: Lints, tests, builds and deploys to CloudFlare pages
    cmds:
      - task build
      - task up
      - task test
      - task deploy:pages
