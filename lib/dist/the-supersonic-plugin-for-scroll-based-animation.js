var e=Object.defineProperty,t=(t,s,i)=>(((t,s,i)=>{s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i})(t,"symbol"!=typeof s?s+"":s,i),i);class s{constructor({id:e,cssAnimation:s,hooks:i,driver:o,domElement:n}){t(this,"id"),t(this,"cssAnimation"),t(this,"data",{}),t(this,"driver"),t(this,"domElement"),t(this,"hooks"),this.id=e,this.driver=o,this.cssAnimation=s,this.hooks=i,this.domElement=n,this.hooks.onInit&&this.hooks.onInit({animation:this})}render({driverProgress:e}){let t=1e4*e;if(this.hooks.onBeforeRender){const e=this.hooks.onBeforeRender({animation:this});if("number"==typeof e)t=e;else if("boolean"==typeof e&&!e)return!1}this.cssAnimation.currentTime=t,this.hooks.onAfterRender&&this.hooks.onAfterRender({animation:this})}}const i={colors:["red","blue","orange","yellow"],colorIndex:0};class o{constructor({id:e,start:i,end:o,plugin:h,elements:d=[],hooks:l={}}){t(this,"id"),t(this,"progress",0),t(this,"data",{}),t(this,"start"),t(this,"end"),t(this,"plugin"),t(this,"animations",new Map),t(this,"domElements",[]),t(this,"helper"),t(this,"hooks"),this.id=e,this.plugin=h,this.hooks=l,this.hooks.onBeforeInit&&this.hooks.onBeforeInit({driver:this}),this.start=new n({domElement:i,type:"start",driver:this}),this.end=new n({domElement:o,type:"end",driver:this}),this.helper=new r({id:e,pluginId:this.plugin.id,debug:h.debug}),d.forEach((e=>{const t="string"==typeof e?e:e.selector;if(this.domElements=Array.from(document.querySelectorAll(t)),0===this.domElements.length)throw new Error(`Can't find element "${t}"`);this.domElements.forEach(((i,o)=>{const n=i.getAnimations(),r=[];"string"==typeof e?(n.length,n.forEach((e=>{r.push({cssAnimation:e,hooks:{}})}))):"object"==typeof e&&e.animations.forEach((e=>{let t="",s={};"string"==typeof e?t=e:"object"==typeof e&&(t=e.name,s=e.hooks);const i=n.find((e=>e.animationName===t));i&&r.push({cssAnimation:i,hooks:s})})),r.forEach((e=>{const n=`${this.id}---${t}---${o}---${e.cssAnimation.animationName}`,r=new s({id:n,driver:this,cssAnimation:e.cssAnimation,hooks:e.hooks,domElement:i});this.animations.set(n,r)}))}))})),this.hooks.onAfterInit&&this.hooks.onAfterInit({driver:this})}render({scroll:e,renderedInitially:t,consoleColor:s="#000000"}){const i=this.progress;if(this.progress=this.calculateProgress({scroll:e,start:this.start.top,end:this.end.top}),this.hooks.onBeforeRender){const e=this.hooks.onBeforeRender({driver:this});if("boolean"==typeof e&&!e)return!1}if(i!==this.progress||!t){for(const e of this.animations.values())e.render({driverProgress:this.progress});this.hooks.onAfterRender&&this.hooks.onAfterRender({driver:this})}}calculateProgress({scroll:e,start:t,end:s}){let i=(e-t)/(s-t);return i=i<0?0:i>1?1:function(e,t){return~~(e*(t=10**t))/t}(i,4),i}updateLimits({scroll:e,screenHeight:t}){this.start.updateLimits({scroll:e,screenHeight:t}),this.end.updateLimits({scroll:e,screenHeight:t});const s=this.start.top+t,i=this.end.top-s;this.helper.updateLimits({top:s,height:i-s}),this.hooks.onUpdateLimits&&this.hooks.onUpdateLimits({driver:this})}activate(){this.plugin.driverActiveInstances.add(this),this.hooks.onActivation&&this.hooks.onActivation({driver:this})}deactivate(){this.plugin.driverActiveInstances.delete(this),this.hooks.onDeactivation&&this.hooks.onDeactivation({driver:this})}}class n{constructor({domElement:e,type:s,driver:i}){if(t(this,"domElement"),t(this,"top",0),!e)throw new Error(`Can't find "${s}" HTMLElement for driver "${i.id}"`);this.domElement=e}updateLimits({scroll:e,screenHeight:t}){this.top=~~this.domElement.getBoundingClientRect().top+e-t}}class r{constructor({id:e,pluginId:s,debug:o=!1}){if(t(this,"domElement"),t(this,"pluginId"),t(this,"debug"),this.pluginId=s,this.debug=o,this.domElement=document.createElement("i"),this.domElement.style.position="absolute",this.domElement.style.left="0",this.domElement.style.width="1px",this.domElement.setAttribute("data-supersonic-driver",e),this.domElement.setAttribute("data-supersonic-type","helper"),this.domElement.setAttribute("data-supersonic-plugin-id",this.pluginId),this.domElement.classList.add("supersonic-helper"),document.body.appendChild(this.domElement),o){const e=Array.from(document.querySelectorAll("[data-supersonic-type='helper']")).indexOf(this.domElement);this.domElement.style.left=10*e+"px",this.domElement.style.width="10px",this.domElement.style.minHeight="50px",this.domElement.style.background=i.colors[i.colorIndex],this.domElement.style.zIndex="100000",3===i.colorIndex?i.colorIndex=0:i.colorIndex++,this.domElement.style.opacity="0.75"}}updateLimits({top:e,height:t}){t<=0&&(t=1),this.domElement.style.setProperty("top",`${e}px`),this.domElement.style.setProperty("height",`${t}px`)}uninit(){this.domElement.remove()}}class h{constructor({observables:e,driverInstances:s}){t(this,"instance"),this.instance=new IntersectionObserver((e=>{e.forEach((e=>{const t=e.target.dataset.supersonicDriver,i=s.get(t);if(!i)throw new Error(`Observer can't find driver "${t}"`);e.isIntersecting?i.activate():i.deactivate()}))})),e.forEach((e=>{this.instance.observe(e)}))}uninit(){this.instance.disconnect()}}class d{constructor({drivers:e,hooks:s={},debug:i=!1}){var n,r;t(this,"id"),t(this,"scroll",0),t(this,"screenHeight",0),t(this,"renderedInitially",!1),t(this,"rafId",0),t(this,"consoleColor","#ffffff"),t(this,"observer",null),t(this,"onResize",null),t(this,"data",{}),t(this,"debug"),t(this,"hooks",{}),t(this,"driverInstances",new Map),t(this,"driverActiveInstances",new Set),this.id=Math.random().toString(16).substring(2),this.hooks=s,this.debug=i,null!=(n=this.hooks)&&n.onBeforeInit&&this.hooks.onBeforeInit({plugin:this});for(const t in e){const s=new o({id:t,hooks:e[t].hooks,start:e[t].start,end:e[t].end,elements:e[t].elements,plugin:this});this.driverInstances.set(t,s)}this.updateLimits();const d=Array.from(document.querySelectorAll(`[data-supersonic-type="helper"][data-supersonic-plugin-id="${this.id}"]`));this.observer=new h({observables:d,driverInstances:this.driverInstances});this.onResize=function(e,t){let s;return function(){clearTimeout(s),s=setTimeout((()=>e.apply(this)),t)}}((()=>{var e;null!=(e=this.hooks)&&e.onBeforeResize&&this.hooks.onBeforeResize({plugin:this}),this.updateLimits(),this.render({useActiveDrivers:!1}),this.hooks.onAfterResize&&this.hooks.onAfterResize({plugin:this})}),250),window.addEventListener("resize",this.onResize),this.render({useActiveDrivers:!1}),this.renderedInitially=!0,null!=(r=this.hooks)&&r.onAfterInit&&this.hooks.onAfterInit({plugin:this})}uninit(){for(const e of this.driverInstances.values())e.helper.uninit();this.driverInstances.clear(),this.driverActiveInstances.clear(),this.observer.uninit(),cancelAnimationFrame(this.rafId),window.removeEventListener("resize",this.onResize)}render({useActiveDrivers:e}){if(this.updateScroll(),this.hooks.onBeforeRender){const e=this.hooks.onBeforeRender({plugin:this});if("boolean"==typeof e&&!e)return!1}const t=e?this.driverActiveInstances.values():this.driverInstances.values();for(const e of t)e.render({scroll:this.scroll,renderedInitially:this.renderedInitially,consoleColor:this.consoleColor});this.rafId=requestAnimationFrame((()=>{this.render({useActiveDrivers:!0})})),this.hooks.onAfterRender&&this.hooks.onAfterRender({plugin:this})}updateLimits(){this.updateScreenHeight(),this.updateScroll();for(const e of this.driverInstances.values())e.updateLimits({scroll:this.scroll,screenHeight:this.screenHeight})}updateScroll(){this.scroll=window.scrollY||document.documentElement.scrollTop}updateScreenHeight(){const e={position:"absolute",left:"0",top:"0",height:"100vh",width:"1px",zIndex:"-1",visibility:"hidden"},t=document.createElement("div");for(const s in e)t.style.setProperty(s,e[s]);document.body.appendChild(t),this.screenHeight=t.clientHeight,t.remove()}}export{s as Animation,o as Driver,d as TheSupersonicPlugin};
